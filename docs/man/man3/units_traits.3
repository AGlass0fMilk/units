.TH "units::traits" 3 "Sun Apr 3 2016" "Version 2.0.0" "Unit Conversion and Dimensional Analysis Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
units::traits \- namespace representing type traits which can access the properties of types provided by the units library\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBhas_decibel_scale\fP"
.br
.RI "\fITrait which tests whether a type is inherited from a decibel scale\&. \fP"
.ti -1c
.RI "struct \fBhas_linear_scale\fP"
.br
.RI "\fITrait which tests whether a type is inherited from a linear scale\&. \fP"
.ti -1c
.RI "struct \fBis_acceleration_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of acceleration\&. \fP"
.ti -1c
.RI "struct \fBis_angle_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of angle\&. \fP"
.ti -1c
.RI "struct \fBis_angular_velocity_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of \fBangular_velocity\fP\&. \fP"
.ti -1c
.RI "struct \fBis_area_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of area\&. \fP"
.ti -1c
.RI "struct \fBis_base_unit\fP"
.br
.RI "\fITrait which tests if a class is a \fC\fBbase_unit\fP\fP type\&. \fP"
.ti -1c
.RI "struct \fBis_capacitance_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of capacitance\&. \fP"
.ti -1c
.RI "struct \fBis_charge_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of charge\&. \fP"
.ti -1c
.RI "struct \fBis_concentration_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of concentration\&. \fP"
.ti -1c
.RI "struct \fBis_conductance_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of conductance\&. \fP"
.ti -1c
.RI "struct \fBis_convertible_unit\fP"
.br
.RI "\fITrait which checks whether two units can be converted to each other\&. \fP"
.ti -1c
.RI "struct \fBis_convertible_unit_t\fP"
.br
.RI "\fITrait which tests whether two container types derived from \fC\fBunit_t\fP\fP are convertible to each other\&. \fP"
.ti -1c
.RI "struct \fBis_current_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of current\&. \fP"
.ti -1c
.RI "struct \fBis_density_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of density\&. \fP"
.ti -1c
.RI "struct \fBis_energy_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of energy\&. \fP"
.ti -1c
.RI "struct \fBis_force_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of force\&. \fP"
.ti -1c
.RI "struct \fBis_frequency_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of frequency\&. \fP"
.ti -1c
.RI "struct \fBis_illuminance_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of illuminance\&. \fP"
.ti -1c
.RI "struct \fBis_impedance_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of impedance\&. \fP"
.ti -1c
.RI "struct \fBis_inductance_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of inductance\&. \fP"
.ti -1c
.RI "struct \fBis_length_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of length\&. \fP"
.ti -1c
.RI "struct \fBis_luminous_flux_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of \fBluminous_flux\fP\&. \fP"
.ti -1c
.RI "struct \fBis_luminous_intensity_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of \fBluminous_intensity\fP\&. \fP"
.ti -1c
.RI "struct \fBis_magnetic_field_strength_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of \fBmagnetic_field_strength\fP\&. \fP"
.ti -1c
.RI "struct \fBis_magnetic_flux_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of \fBmagnetic_flux\fP\&. \fP"
.ti -1c
.RI "struct \fBis_mass_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of mass\&. \fP"
.ti -1c
.RI "struct \fBis_nonlinear_scale\fP"
.br
.RI "\fITrait which tests that \fCclass T\fP meets the requirements for a non-linear scale\&. \fP"
.ti -1c
.RI "struct \fBis_power_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of power\&. \fP"
.ti -1c
.RI "struct \fBis_pressure_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of pressure\&. \fP"
.ti -1c
.RI "struct \fBis_radioactivity_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of radiation\&. \fP"
.ti -1c
.RI "struct \fBis_ratio\fP"
.br
.RI "\fITrait that tests whether a type represents a std::ratio\&. \fP"
.ti -1c
.RI "struct \fBis_same_scale\fP"
.br
.RI "\fITrait which tests whether two types has the same non-linear scale\&. \fP"
.ti -1c
.RI "struct \fBis_scalar_unit\fP"
.br
.RI "\fITrait which tests whether one or more types derived from \fC\fBunit_t\fP\fP represent scalar values\&. \fP"
.ti -1c
.RI "struct \fBis_solid_angle_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of \fBsolid_angle\fP\&. \fP"
.ti -1c
.RI "struct \fBis_substance_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of substance\&. \fP"
.ti -1c
.RI "struct \fBis_temperature_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of temperature\&. \fP"
.ti -1c
.RI "struct \fBis_time_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of time\&. \fP"
.ti -1c
.RI "struct \fBis_torque_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of torque\&. \fP"
.ti -1c
.RI "struct \fBis_unit\fP"
.br
.RI "\fITraits which tests if a class is a \fCunit\fP \fP"
.ti -1c
.RI "struct \fBis_unit_t\fP"
.br
.RI "\fITraits which tests if a class is a \fCunit\fP \fP"
.ti -1c
.RI "struct \fBis_unit_value_t\fP"
.br
.RI "\fITrait which tests whether a type is a \fBunit_value_t\fP representing the given unit type\&. \fP"
.ti -1c
.RI "struct \fBis_unit_value_t_category\fP"
.br
.RI "\fITrait which tests whether type T is a \fBunit_value_t\fP with a unit type in the given category\&. \fP"
.ti -1c
.RI "struct \fBis_velocity_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of velocity\&. \fP"
.ti -1c
.RI "struct \fBis_voltage_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of voltage\&. \fP"
.ti -1c
.RI "struct \fBis_volume_unit\fP"
.br
.RI "\fITrait which tests whether a type represents a unit of volume\&. \fP"
.ti -1c
.RI "struct \fBunit_t_traits\fP"
.br
.RI "\fITrait for accessing the publically defined types of \fC\fBunits::unit_t\fP\fP \fP"
.ti -1c
.RI "struct \fBunit_traits\fP"
.br
.RI "\fITraits class defining the properties of units\&. \fP"
.ti -1c
.RI "struct \fBunit_value_t_traits\fP"
.br
.RI "\fITrait for accessing the publically defined types of \fCunits::unit_value_t_traits\fP \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<class U > using \fBbase_unit_of\fP = typename detail::base_unit_of_impl< U >::type"
.br
.RI "\fITrait which returns the \fC\fBbase_unit\fP\fP type that a unit is originally derived from\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
namespace representing type traits which can access the properties of types provided by the units library\&. 
.SH "Typedef Documentation"
.PP 
.SS "template<class U > using \fBunits::traits::base_unit_of\fP = typedef typename detail::base_unit_of_impl<U>::type"

.PP
Trait which returns the \fC\fBbase_unit\fP\fP type that a unit is originally derived from\&. Since units can be derived from other \fCunit\fP types in addition to \fC\fBbase_unit\fP\fP types, the \fCbase_unit_type\fP typedef will not always be a \fC\fBbase_unit\fP\fP (or unit category)\&. Since compatible 
.SH "Author"
.PP 
Generated automatically by Doxygen for Unit Conversion and Dimensional Analysis Library from the source code\&.
