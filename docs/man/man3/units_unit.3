.TH "units::unit< Conversion, BaseUnit, PiExponent, Translation >" 3 "Sun Apr 3 2016" "Version 2.0.0" "Unit Conversion and Dimensional Analysis Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
units::unit< Conversion, BaseUnit, PiExponent, Translation > \- Type representing an arbitrary unit\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <units\&.h>\fP
.PP
Inherits _unit\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBtraits::unit_traits\fP< BaseUnit >::base_unit_type \fBbase_unit_type\fP"
.br
.ti -1c
.RI "typedef std::ratio_multiply< typename BaseUnit::conversion_ratio, Conversion > \fBconversion_ratio\fP"
.br
.ti -1c
.RI "typedef std::ratio_add< typename BaseUnit::pi_exponent_ratio, PiExponent > \fBpi_exponent_ratio\fP"
.br
.ti -1c
.RI "typedef std::ratio_add< std::ratio_multiply< typename BaseUnit::conversion_ratio, Translation >, typename BaseUnit::translation_ratio > \fBtranslation_ratio\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class Conversion, class BaseUnit, class PiExponent = std::ratio<0>, class Translation = std::ratio<0>>struct units::unit< Conversion, BaseUnit, PiExponent, Translation >"
Type representing an arbitrary unit\&. 

\fCunit\fP types are used as tags for the \fCconversion\fP function\&. They are \fInot\fP containers (see \fC\fBunit_t\fP\fP for a container class)\&. Each unit is defined by:
.PP
.IP "\(bu" 2
A \fCstd::ratio\fP defining the conversion factor to the base unit type\&. (e\&.g\&. \fCstd::ratio<1,12>\fP for inches to feet)
.IP "\(bu" 2
A base unit that the unit is derived from (or a unit category\&. Must be of type \fCunit\fP or \fC\fBbase_unit\fP\fP)
.IP "\(bu" 2
An exponent representing factors of PI required by the conversion\&. (e\&.g\&. \fCstd::ratio<-1>\fP for a radians to degrees conversion)
.IP "\(bu" 2
a ratio representing a datum translation required for the conversion (e\&.g\&. \fCstd::ratio<32>\fP for a farenheit to celsius conversion)
.PP
.PP
Typically, a specific unit, like \fCmeters\fP, would be implemented as a type alias of \fCunit\fP, i\&.e\&. \fCusing meters = unit<std::ratio<1>, \fBcategory::length_unit\fP\fP, or \fCusing inches = unit<std::ratio<1,12>, feet>\fP\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIConversion\fP std::ratio representing scalar multiplication factor\&. 
.br
\fIBaseUnit\fP Unit type which this unit is derived from\&. May be a \fC\fBbase_unit\fP\fP, or another \fCunit\fP\&. 
.br
\fIPiExponent\fP std::ratio representing the exponent of pi required by the conversion\&. 
.br
\fITranslation\fP std::ratio representing any datum translation required by the conversion\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Unit Conversion and Dimensional Analysis Library from the source code\&.
